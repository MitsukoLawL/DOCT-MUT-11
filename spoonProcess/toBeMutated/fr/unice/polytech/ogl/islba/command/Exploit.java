package fr.unice.polytech.ogl.islba.command;

import fr.unice.polytech.ogl.islba.model.Equipe;
import fr.unice.polytech.ogl.islba.model.EtatDeJeu;
import org.json.JSONException;
import org.json.JSONObject;

public class Exploit extends Command {
    private String ressource;

    public Exploit(String ressource){
        this.setName("exploit");
        this.ressource = ressource;
    }

    /**
     * Create the JSONObject corresponding to the Exploit command
     * The form is : {"action": "exploit", "parameters": {"resource", "nameOfTheResource"} }
     */
    @Override
    public JSONObject toJSON() {
        JSONObject obj = new JSONObject();
        JSONObject param = new JSONObject();
        try {
            obj.put("action", this.getName());
            param.put("resource", ressource);
            obj.put("parameters", param);
        } catch (JSONException e) {
            throw new JSONRuntimeException("Problem with Exploit.toJSON()"+ e);
        }
        return obj;
    }
    
    /**
     * Parse the JSONObject result and apply the changes at the EtatDeJeu object.
     * The JSON from a exploit command has the amount of the wanted resource we have
     * exploited in it.
     * @param result
     *          the JSONObject with the result of the command
     * @param jeu
     *          the current game state that we want to change
     */
    @Override
    public void doResult(JSONObject result, EtatDeJeu jeu){
        super.doResult(result, jeu);
        int amount;
        try{
            amount = result.getJSONObject("extras").getInt("amount");
        }catch (JSONException e){
            throw new JSONRuntimeException("Problem with Exploit.doResult"+e);
        }
        Equipe team = jeu.getTeam();
        team.exploitResource(this.ressource, amount);
        jeu.getMapMonde().getCurrentCase().removeResource(this.ressource);
    }
}
