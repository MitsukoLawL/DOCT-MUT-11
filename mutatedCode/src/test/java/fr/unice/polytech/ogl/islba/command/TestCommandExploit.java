package fr.unice.polytech.ogl.islba.command;

import fr.unice.polytech.ogl.islba.model.Case;
import fr.unice.polytech.ogl.islba.model.EtatDeJeu;
import fr.unice.polytech.ogl.islba.model.resource.Resource;

import org.json.JSONException;
import org.json.JSONObject;
import org.junit.Test;

import java.util.HashMap;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class TestCommandExploit {
    private EtatDeJeu etat = new EtatDeJeu(600, "creek_id",50,new HashMap<String, Integer>());

    @Test
    public void exploitInexistant() {
        Command c;
        c = new Land(etat.getTeam().getMAXMEN()/2, etat.getCreekID());
        c.doResult(new JSONObject("{\"status\":\"OK\",\"cost\":12}"), etat);

        Case caseActuelle = etat.getMapMonde().getCurrentCase();
        caseActuelle.addRessource(new Resource("WOOD", "unknown", "unknown"));

        String ressourceFake = "FUR";
        //c = new Exploit(ressourceFake);

        assertFalse(caseActuelle.hasRessource(ressourceFake));
    }

    @Test
    public void testToJSON() {
        String ressource = "WOOD";
        Exploit exploit = new Exploit(ressource);

        JSONObject obj = new JSONObject();
        JSONObject param = new JSONObject();
        try {
            obj.put("action", exploit.getName());
            param.put("resource", ressource);
            obj.put("parameters", param);
        } catch (JSONException e) {
            e.printStackTrace();
        }
        assertTrue((exploit.toJSON().toString()).equals(obj.toString()));
    }

}
